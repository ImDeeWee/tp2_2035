;;; Tests.                  -*- mode: lisp-data; coding: utf-8 -*-


(/(* (+ 2 4) 6)2)                           ; ↝ 18

(def (((square x) (* x x)))
  (square 5))                               ; ↝ 25


(((proc (f) (f 7))
  (proc (x) (* x x))))                      ; ↝ 49


(def (((pList xs)
       (case xs
         (null -1)          
         ((node x xs) (node (+ x 1) xs))))) 
  (pList (seq 5 6 7)))                      ; ↝ [6 6 7]


(def (((qList xs)
       (case xs
         (null -1)                       
         ((node x xs)
           (case xs
             (null (node x xs))         
             ((node y ys) (node (+ x 2) (node (+ y 1) ys))))))))  
  (qList (seq 7 8 9)))                      ; ↝ [9 9 9]

(def (((Adder x)
       (proc (y) (+ x y))))
  (def ((addFive (Adder 5)))
    (addFive 3)))                           ; ↝ 8

(print (seq 2 3 4))                         ; ↝ [2 3 4] []  



